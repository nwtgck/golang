version: 2
jobs:
  build:
    docker:
      - image: ubuntu:16.04
    steps:
      - checkout
      - run: |
          apt update
          apt install -y wget binutils build-essential
      - run: |
          wget https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz
          mkdir tmp
          tar zxvf go1.4.2.linux-amd64.tar.gz -C tmp/
          mv tmp/go $HOME/go1.4
          rm go1.4.2.linux-amd64.tar.gz
      - run:
          name: Build & Test
          command: |
            cd src
            # Test 
            # (NOTE: "./make.bash" is available to build only without tests)
            ./all.bash

  docker_test:
    machine: true
    steps:
      - checkout
      # Check whether "docker build" is succcessful or not
      - run: docker build -t golang .
      - run:
          name: Working test with Docker image
          command: |
            # Create main.go
            # (NOTE: fmt is not used at all)
            cat << EOS > main.go
            package main

            import "fmt"

            func main() {

            }
            EOS

            echo "It should fail without GO_IGNORE_UNUSED_PKG"
            ! docker run --rm -v $PWD/main.go:/main.go golang go run /main.go

            echo "It should pass with GO_IGNORE_UNUSED_PKG"
            docker run --rm -v $PWD/main.go:/main.go -e GO_IGNORE_UNUSED_PKG=1 golang go run /main.go

workflows:
  version: 2
  test:
    jobs:
      - build
      - docker_test
